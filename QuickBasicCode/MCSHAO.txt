'''==THE STANDARD VERSION ONLY FOR DAMAGE WITHOUT ANY CASCADE CALCULATION 02/26/01

DECLARE SUB EMAGIC (X!)
DECLARE SUB TMAGIC (MASS1!, Z1!, MASS2!, Z2!, INELAB!, P!)
DECLARE SUB AMAGIC (THETAO!, ALPHAO!, THETA1RELATIVE!, THETA2RELATIVE!)
DECLARE FUNCTION DF! (X!, COLUMBIAVK!, Z1!, Z2!, AU!)
DECLARE FUNCTION F! (X!, COLUMBIAVK, Z1, Z2, AU)



CLS
OPEN "c:\PRANGE.DAT" FOR OUTPUT AS #1
OPEN "c:\simuli.DAT" FOR OUTPUT AS #2
OPEN "c:\simulv.DAT" FOR OUTPUT AS #3
OPEN "c:\3DINTL.DAT" FOR OUTPUT AS #4

' Notes:  OPNE FILE TO SAVE DATA

INPUT " Input incident atom mass?  (14)  ", massp     'MASSP--MASS OF INCIDENT ATOM
IF massp = 0 THEN massp = 14
INPUT " Input incident atom charge Z ?  (14)", ZP     'ZP--CHARGE NUMBER OF INCIDENT ATOM
IF ZP = 0 THEN ZP = 14
INPUT " Input substrate atom mass? (28)", MASSSUB          'MASSSUB--MASS OF SUBSTRATE ATOM
IF MASSSUB = 0 THEN MASSSUB = 27.9
INPUT " Input second layer atom charge Z? (14)", ZSUB          'z2--CHARGE NUMBER OF TARGET ATOM
IF ZSUB = 0 THEN ZSUB = 14
INPUT "Input substrate density (atoms/cc) (for Si d=5e22/cc)", SUBDENSITY
IF SUBDENSITY = 0 THEN SUBDENSITY = 5E+22
SUBDENSITY = SUBDENSITY / 1E+24
INPUT " Input incident atom energy (kev)? ", INELAB   'IME-INCIDENT ATOM ENERGY (KEV) IN LAB COORDINATOR
IF INELAB = 0 THEN INELAB = 50
INPUT "SUBSTRATE WINDOW (A)", SUBWINDOW
IF SUBWINDOW = 0 THEN SUBWINDOW = 2000
INPUT "HOW MANY SIMULATION YOU WANT?", SIMULS
IF SIMULS = 0 THEN SIMULS = 100

' Notes:  INPUT STARTING DATA

DIM PR(SUBWINDOW + 2)     'PRIMARY ION RANGE
DIM RR(SUBWINDOW + 2)   'RECOILED ATOM RANGE
DIM V(SUBWINDOW + 2)      'VACANCY DISTRIBUTION
DIM I(SUBWINDOW + 2)       'INTERSTITIAL DISTRIBUTION
DIM XP(2000)                 'X POSTION
DIM YP(2000)                 'Y POSITION
DIM ZP(2000)                 'Z(DEPTH) POSITION
DIM CP(2000)                 'CHARGE NUMBER OF PRIMARY ION
DIM mp(2000)                 'MASS OF PRIMARY ION
DIM THETAP(2000)             'ANGLE WITH Z AXIS
DIM ALPHAP(2000)             'ANGLE WITH X AXIS (RZ PLANE)
DIM EP(2000)                 'ENERGY OF PRIMARY ION


' Notes:  DEFINE SIZE OF MATRIX TO SAVE INF. OF PARTICLE TO BE MOVED

FOR RR = 0 TO SUBWINDOW + 1
PR(RR) = 0
RR(RR) = 0
V(RR) = 0
I(RR) = 0
NEXT RR
FOR rum = 1 TO 2000
XP(rum) = 0
ZP(rum) = 0
YP(rum) = 0
CP(rum) = 0
mp(rum) = 0
ALPHAP(rum) = 0
THETAP(rum) = 0
EP(rum) = 0
NEXT rum

' Notes:  INITIALIZE ORIGNAL VALUES FRO MATRIXES


     SCREEN 9  'MODIFIED BY 01/12/01
     VIEW (1, 1)-(300, 300), 2, 15  ' MODIFIED BY 01/12/01




EBARRIER(EV) = .02                      'MINIMUM ENERGY FOR ATOM DISPLACEMENT(20EV)                  
PI = 3.1415926#

DOSE = 0
SPUTTER = 0
RANDOMIZE
FOR SIMUL = 1 TO SIMULS
IF SIMUL - 20 * INT(SIMUL / 200) = 0 THEN RANDOMIZE TIMER
XP(1) = 0                                      'FOR INCIDENT ION, THE BEGINNING OF EVERY SIMULATION
YP(1) = 0
ZP(1) = RND * SUBDENSITY ^ (-1 / 3)                'INTERFACE IS ZERO POSITON
CP(1) = ZP
mp(1) = massp
THETAP(1) = 0
ALPHAP(1) = 0
EP(1) = INELAB  'INELAB IS IMPLANTATION ENERGY OF INCIDENT ION

rum = 1
MASS2 = MASSSUB
Z2 = ZSUB
DENSITY = SUBDENSITY
100
IF rum = 0 THEN GOTO 600        'BEGIN A IMPLAN

    IF ZP(rum) >= SUBWINDOW THEN
          rum = rum - 1
          GOTO 100
          ELSE
          END IF
    IF ZP(rum) < 0 THEN
          SPUTTER = SPUTTER + 1
          rum = rum - 1
          GOTO 100
          ELSE
          END IF
   
    IF EP(rum) < .02 THEN
      
          IF mp(rum) = MASS2 THEN PRINT #4, USING "##.###^^^^^ ##.###^^^^^ ##.###^^^^^"; XP(rum); YP(rum); ZP(rum)    'modified 01/12/01
          I(INT(ZP(rum))) = I(INT(ZP(rum))) + 1
          IF mp(rum) = massp THEN PR(INT(ZP(rum))) = PR(INT(ZP(rum))) + 1
          rum = rum - 1
          GOTO 100
          ELSE
          END IF

'================== BEGIN A NEW COLLISION

COLUMBIAVK = .0143992# * CP(rum) * Z2        'POTENTIAL V=COLUMBIAVK(ANSTRON*KEV)*Z1*Z2/R '
MC = mp(rum) * MASS2 / (mp(rum) + MASS2)    'MC--REDUCED MASS IN CENTER-MASS COORDINATOR
INVLAB = SQR(EP(rum) * 2 / mp(rum))         'INVLAB--INCIDENT VOLOCITY IN LAB C.
EC = 1 / 2 * MC * INVLAB ^ 2 'EC--INITIAL ENERGY IN CM
AU = .8854 * .529 / (Z1 ^ .5 + Z2 ^ .5) ^ (2 / 3)
ELINHARD = EC * AU / COLUMBIAVK


KL = 1.212 * CP(rum) ^ (7 / 6) * Z2 / (CP(rum) ^ (2 / 3) + Z2 ^ (2 / 3)) ^ (3 / 2) / (mp(rum) ^ .5)
PL = .5
SE = KL * (EP(rum) * 1000) ^ PL      'UNIT IS EV
L = DENSITY ^ (-1 / 3)
P = (RND / (PI * DENSITY ^ (2 / 3))) ^ .5


'================== COLLISON PARAMETER

EP(rum) = EP(rum) - 1.59 * L * DENSITY * SE / 1000

IF EP(rum) < .02 THEN
          IF mp(rum) = MASS2 THEN PRINT #4, USING "##.###^^^^^ ##.###^^^^^ ##.###^^^^^"; XP(rum); YP(rum); ZP(rum)  'modified 01/12/01    
          I(INT(ZP(rum))) = I(INT(ZP(rum))) + 1
          IF mp(rum) = massp THEN PR(INT(ZP(rum))) = PR(INT(ZP(rum))) + 1
          rum = rum - 1
          GOTO 100
ELSE
END IF
CALL TMAGIC(mp(rum), CP(rum), MASS2, Z2, EP(rum), P)
'TO GET RE, THETA1RELATIVE,THETA2RELATIVE
CALL AMAGIC(THETAP(rum), ALPHAP(rum), THETA1RELATIVE, THETA2RELATIVE)

'THETAP(RUM), ALPHA(RUM) ARE ANGLE BEFORE COLLISION
'THETA1,THETA2 IS RELATIVE DEFLECTION AND RECOIL ANGLE AFTER COLLISION VIA R IS Z AXIS
'AMAGIC IS TO GET NEW THETAP AND ALPHA AFTER COLLISON

'=====TEMPERARY SAVE INFORMATION

ZP(rum + 1) = ZP(rum) + L * COS(THETAP(rum))
XP(rum + 1) = XP(rum) + L * SIN(THETAP(rum)) * COS(ALPHAP(rum))
YP(rum + 1) = YP(rum) + L * SIN(THETAP(rum)) * SIN(ALPHAP(rum))
CP(rum + 1) = Z2      'CP(rum + 1) = CP(rum)
mp(rum + 1) = MASS2   'mp(RUM + 1) = mp(RUM)
THETAP(rum + 1) = THETA2                  'THETAP(RUM + 1) = THETA1  01/25/01
ALPHAP(rum + 1) = ALPHA2                  'ALPHAP(RUM + 1) = ALPHA1  01/25/01
EP(rum + 1) = RE - EBARRIER(EV)           'EP(RUM + 1) = EP(RUM) - RE  01/25/01


        WINDOW SCREEN (0, 0)-(FILMTHICKNESS + SUBWINDOW, FILMTHICKNESS + SUBWINDOW)  'modified 01/12/01

                 LOCATE 4, 47  'modified 01/12/01
                 PRINT " SIMULATION:"; SIMUL; "("; SIMULS; ")"  'modified 01/12/01
                 IF mp(rum) = massp THEN LINE (1 * ZP(rum), (FILMTHICKNESS + SUBWINDOW) / 2 + XP(rum))-(1 * ZP(rum + 1), (FILMTHICKNESS + SUBWINDOW) / 2 + XP(rum + 1)), 4     'modified 01/12/01
                 IF mp(rum) = MASSSUB THEN LINE (1 * ZP(rum), (FILMTHICKNESS + SUBWINDOW) / 2 + XP(rum))-(1 * ZP(rum + 1), (FILMTHICKNESS + SUBWINDOW) / 2 + XP(rum + 1)), 1   'modified 01/12/01
'''''''''      IF MP(RUM) = MASSFILM THEN LINE (1 * ZP(RUM), (FILMTHICKNESS + SUBWINDOW) / 2 + XP(RUM))-(1 * ZP(RUM + 1), (FILMTHICKNESS + SUBWINDOW) / 2 + XP(RUM + 1)), 1   'modified 01/12/01

'====IF RE<=0.02 THEN
IF RE <= .02 THEN
' IF TARGET HAVE NO DISPLACEMENT, RECORD STILL GO BACK TO RUM
ZP(rum) = ZP(rum + 1)
XP(rum) = XP(rum + 1)
YP(rum) = YP(rum + 1)
mp(rum) = mp(rum)        'MP(RUM) = MP(RUM + 1)
CP(rum) = CP(rum)        'CP(RUM) = CP(RUM + 1)
THETAP(rum) = THETA1     'THETAP(RUM) = THETAP(RUM + 1)
ALPHAP(rum) = ALPHA1     'ALPHAP(RUM) = ALPHAP(RUM + 1)
EP(rum) = EP(rum) - RE   'EP(RUM) = EP(RUM + 1)
GOTO 100
ELSE
END IF

'====IF RE>0.02 THEN
' IF TARGET HAS DISPLACEMENT, TARGET WILL REPLACE RUM RECORD

XP(rum) = XP(rum + 1)
YP(rum) = YP(rum + 1)      'YP(RUM) = YP(RUM + 1)
ZP(rum) = ZP(rum + 1)      'ZP(RUM) = ZP(RUM + 1)
mp(rum) = mp(rum)        'MP(RUM) = MASS2
CP(rum) = CP(rum)        'CP(RUM) = Z2
THETAP(rum) = THETA1        'THETAP(RUM) = THETA2
ALPHAP(rum) = ALPHA1        'ALPHAP(RUM) = ALPHA2
EP(rum) = EP(rum) - RE      'EP(RUM) = RE - EBARRIER(EV)

IF ZP(rum + 1) > O AND ZP(rum + 1) < SUBWINDOW THEN
        V(INT(ZP(rum + 1))) = V(INT(ZP(rum + 1))) + 1
        ELSE
        END IF
rum = rum + 1
GOTO 100
600
NEXT SIMUL


FOR RRR = 0 TO SUBWINDOW
PRINT #1, USING "##.###^^^^^ ##.###^^^^^"; RRR; PR(RRR)
NEXT RRR
FOR RRRR = 0 TO SUBWINDOW
PRINT #2, USING "##.###^^^^^ ##.###^^^^^"; RRRR; I(RRRR)
PRINT #3, USING "##.###^^^^^ ##.###^^^^^"; RRRR; V(RRRR)

NEXT RRRR
END

SUB AMAGIC (THETAO, ALPHAO, THETA1RELATIVE, THETA2RELATIVE)
SHARED PI
SHARED THETA1         'RESULT TO MAIN PROGRAM, DEFLECTION ANGLE TO ORIGINAL C.
SHARED ALPHA1         'RESULT TO MAIN PROGRAM
SHARED THETA2         'RESULT TO MAIN PROGRAM
SHARED ALPHA2         'RESULT TO MAIN PROGRAM
 
  ALPHA1RELATIVE = RND * 2 * PI
  ALPHA2RELATIVE = PI + ALPHA1RELATIVE
'COSTHETA1 = COS(THETAO) * COS(THETA1RELATIVE) + SIN(THETAO) * SIN(THETA1RELATIVE) * COS(ALPHA1RELATIVE)
'THETA1 = ATN(SQR(1 - COSTHETA1 ^ 2) / COSTHETA1)
'IF THETA1 >= 0 THEN THETA1 = THETA1
'IF THETA1 < 0 THEN THETA1 = PI + THETA1

'COSTHETA2 = COS(THETAO) * COS(THETA2RELATIVE) + SIN(THETAO) * SIN(THETA2RELATIVE) * COS(ALPHA2RELATIVE)
'THETA2 = ATN(SQR(1 - COSTHETA2 ^ 2) / COSTHETA2)
'IF THETA2 >= 0 THEN THETA2 = THETA2
'IF THETA2 <= O THEN THETA2 = PI + THETA2
'PI = 3.1515926#
'SHARED THETA1         'RESULT TO MAIN PROGRAM, DEFLECTION ANGLE TO ORIGINAL C.
'SHARED ALPHA1         'RESULT TO MAIN PROGRAM
'SHARED THETA2         'RESULT TO MAIN PROGRAM
'SHARED ALPHA2         'RESULT TO MAIN PROGRAM

  ALPHA1RELATIVE = RND * 2 * PI
  ALPHA2RELATIVE = ALPHA1RELATIVE + PI
'=====FOR PRIMARY ION
X1 = SIN(THETA1RELATIVE) * COS(ALPHA1RELATIVE)
Y1 = SIN(THETA1RELATIVE) * SIN(ALPHA1RELATIVE)
Z1 = COS(THETA1RELATIVE)

Y0 = Y1 * COS(THETAO) + Z1 * SIN(THETAO)
Z0 = -Y1 * SIN(THETAO) + Z1 * COS(THETAO)
X0 = X1

Z = Z0
X = X0 * SIN(ALPHAO) + Y0 * COS(ALPHAO)
Y = -X0 * COS(ALPHAO) + Y0 * SIN(ALPHAO)

IF Z > O THEN THETA1 = ATN(SQR(X ^ 2 + Y ^ 2) / Z)
IF Z = 0 THEN THETA1 = PI / 2
IF Z < 0 THEN THETA1 = PI + ATN(SQR(X ^ 2 + Y ^ 2) / Z)

IF SIN(THETA1) <> 0 THEN
IF X > 0 THEN ALPHA1 = ATN(Y / X)
IF X = 0 THEN ALPHA1 = PI - SGN(Y) * PI / 2
IF X < 0 THEN ALPHA1 = PI + ATN(Y / X)
ELSE
ALPHA1 = 0
END IF

'========FOR RECOIL TARGET ION

X1 = SIN(THETA2RELATIVE) * COS(ALPHA2RELATIVE)
X2 = SIN(THETA2RELATIVE) * SIN(ALPHA2RELATIVE)
Z1 = COS(THETA2RELATIVE)

Y0 = Y1 * COS(THETAO) + Z1 * SIN(THETAO)
Z0 = -Y1 * SIN(THETAO) + Z1 * COS(THETAO)
X0 = X1

Z = Z0
X = X0 * SIN(ALPHAO) + Y0 * COS(ALPHAO)
Y = -X0 * COS(ALPHAO) + Y0 * SIN(ALPHAO)

IF Z > O THEN THETA2 = ATN(SQR(X ^ 2 + Y ^ 2) / Z)
IF Z = 0 THEN THETA2 = PI / 2
IF Z < 0 THEN THETA2 = PI + ATN(SQR(X ^ 2 + Y ^ 2) / Z)

IF SIN(THETA2) <> 0 THEN
IF X > 0 THEN ALPHA2 = ATN(Y / X)
IF X = 0 THEN ALPHA2 = PI - SGN(Y) * PI / 2
IF X < 0 THEN ALPHA2 = PI + ATN(Y / X)
ELSE
ALPHA2 = 0
END IF


END SUB

 FUNCTION DF (X, COLUMBIAVK, Z1, Z2, AU)
DF = F(X, COLUMBIAVK, Z1, Z2, AU) / X + COLUMBIAVK / X * (.35 * EXP(-.3 / X / AU) * .3 / AU + .55 * EXP(-1.2 / X / AU) * 1.2 / AU + .1 * EXP(-6 / X / AU) * 6 / AU)
END FUNCTION

SUB EMAGIC (X)
SHARED ATOMD
SHARED ELOSS

' X IS THE CURVE FITTING FROM TRIM AND UNIT IS EV, X UNIT IS KEV
IF X * 1000 > 1 AND X * 1000 <= 10 THEN ELOSS = ATOMD * (.7122 + .1026 * X * 1000) / 1000
IF X * 1000 > 10 AND X * 1000 <= 100 THEN ELOSS = ATOMD * (1.671 + .0252 * X * 1000) / 1000
IF X * 1000 > 100 AND X * 1000 <= 400 THEN ELOSS = ATOMD * (5.0767 + .0044 * X * 1000) / 1000
IF X * 1000 > 1000 AND X * 1000 <= 10000 THEN ELOSS = ATOMD * (9.28 + .00144 * X * 1000) / 1000
IF X * 1000 > 10000 THEN ELOSS = ATOMD * (9.28 + .00144 * X * 1000) / 1000
END SUB

FUNCTION F (X, COLUMBIAVK, Z1, Z2, AU)
'===========================UNIVERAIAL SCREENING POTENTIAL=================
IF X = O THEN
F = 0
ELSE
F = COLUMBIAVK * X * (.35 * EXP(-.3 / X / AU) + .55 * EXP(-1.2 / X / AU) + .1 * EXP(-6 / X / AU))
END IF
 '=========================COLUMBIA POTENTIAL==============================
'F = COLUMBIAVK * X


END FUNCTION

 SUB TMAGIC (MASS1, Z1, MASS2, Z2, INELAB, P)

SHARED ATOMD                   'WHAT SHARED IS ALL THE NEEDED DATA BUT NOT DEFINED HERE
                               'AND ALL THE RESULT NEEDING TRANSFERED TO MAIN PROGRAM
SHARED THETA1RELATIVE          'RESULT TO MAIN PROGRAM
SHARED THETA2RELATIVE          'RESULT TO MAIN PROGRAM
SHARED RE                      'RESULT TO MAIN PROGRAM

PI = 3.1415926#
'=============================INITIAL PARAMETER============================

COLUMBIAVK = .0143992# * Z1 * Z2        'POTENTIAL V=COLUMBIAVK(ANSTRON*KEV)*Z1*Z2/R '
MC = MASS1 * MASS2 / (MASS1 + MASS2)    'MC--REDUCED MASS IN CENTER-MASS COORDINATOR
INVLAB = SQR(INELAB * 2 / MASS1)         'INVLAB--INCIDENT VOLOCITY IN LAB C.
EC = 1 / 2 * MC * INVLAB ^ 2 'EC--INITIAL ENERGY IN CM
AU = .8854 * .529 / (Z1 ^ .5 + Z2 ^ .5) ^ (2 / 3)
ELINHARD = EC * AU / COLUMBIAVK

'==============FIND RMIN FOR DIFFERENT ENERGY======================
 AA = P ^ 2
 IF AA = 0 THEN AA = .00001
 BB = COLUMBIAVK / EC
 CC = -1
 COLUMRMIN = 1 / 2 / AA * (-BB + SQR(BB ^ 2 - 4 * AA * CC))'COLUMRMIN IS 1/RMIN, RMIN IS THE MINIMUM R UNDER COLUMBIA POTENTIAL

CALTIME = 1
300  RMINTRY1 = COLUMRMIN
 DV = ABS(-DF(RMINTRY1, COLUMBIAVK, Z1, Z2, AU) / EC - 2 * P ^ 2 * RMINTRY1)
 IF ABS(DV) < .000001 THEN DV = .1
 RMINTRY2 = RMINTRY1 + (1 - F(RMINTRY1, COLUMBIAVK, Z1, Z2, AU) / EC - P ^ 2 * RMINTRY1 ^ 2) / DV
 COLUMRMIN = RMINTRY2
 CALTIME = CALTIME + 1
 IF CALTIME > 10000 THEN GOTO 350
 IF ABS(RMINTRY2 - RMINTRY1) > .00001 THEN GOTO 300
350  RMIN = (RMINTRY2 + RMINTRY1) / 2
   
 
   

'=====================CALCULATE DEFELCTION ANGLE=========================



RBIERSACK = 2 * (EC - F(RMIN, COLUMBIAVK, Z1, Z2, AU)) / RMIN ^ 2 / DF(RMIN, COLUMBIAVK, Z1, Z2, AU)

BBIERSACK = P / AU
ROBIERSACK = 1 / (RMIN * AU)
RCBIERSACK = RBIERSACK / AU

C1BIERSACK = .6743
C2BIERSACK = .009611
C3BIERSACK = .005175
C4BIERSACK = 10!
C5BIERSACK = 6.314
ALTHABIERSACK = 1 + C1BIERSACK * ELINHARD ^ (-1 / 2)
BELTABIERSACK = (C2BIERSACK + ELINHARD ^ (1 / 2)) / (C3BIERSACK + ELINHARD ^ (1 / 2))
GAMABIERSACK = (C4BIERSACK + ELINHARD) / (C5BIERSACK + ELINHARD)
ABIERSACK = 2 * ALTHABIERSACK * ELINHARD * BBIERSACK ^ BELTABIERSACK
GBIERSACK = GAMABIERSACK * 1 / ((1 + ABIERSACK ^ 2) ^ (1 / 2) - ABIERSACK)
DELTABIERSACK = ABIERSACK * (ROBIERSACK - BBIERSACK) / (1 + GBIERSACK)
'PRINT "COS(H/2)="; (BBIERSACK + RCBIERSACK + DELTABIERSACK) / (ROBIERSACK + RCBIERSACK)
'END
IF P = 0 THEN
CALPHA1 = PI
ELSE
CALPHA1 = 2 * ATN(SQR((ROBIERSACK + RCBIERSACK) ^ 2 / (BBIERSACK + RCBIERSACK + DELTABIERSACK) ^ 2 - 1))
END IF
' ===================DEFLECTION ANGLE IN LAB COORDINATOR===========
COSPLUSMASS = COS(CALPHA1) + MASS1 / MASS2
IF COSPLUSMASS = 0 THEN THETA1RELATIVE = PI / 2
IF COSPLUSMASS < 0 THEN THETA1RELATIVE = PI + ATN(SIN(CALPHA1) / COSPLUSMASS)
IF COSPLUSMASS > 0 THEN THETA1RELATIVE = ATN(SIN(CALPHA1) / COSPLUSMASS)

'===================CALCUTE T & DIRECTION OF TARGET ATOM=============
RE = 4 * EC * MC / MASS2 * SIN(CALPHA1 / 2) * SIN(CALPHA1 / 2)
                                             'RE IS ENERGY TRANSIMITED TO TARGET ATOM'
 '===================RECOILED DIRECTION==================================
THETA2RELATIVE = (PI - CALPHA1) / 2        'RECOILED DIRECTION
'PRINT "RE="; RE, "CALPHA1="; CALPHA1
END SUB

